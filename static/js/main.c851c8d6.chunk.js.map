{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgessBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","id","style","display","options","strings","autoStart","loop","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","motion","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","ImageGrid","setSelectedImg","map","layout","whileHover","opacity","s","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c851c8d6.chunk.js","sourcesContent":["import React from 'react';\nimport Typewriter from 'typewriter-effect';\n\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>[ S.A.H.M ]</h1>\n            <h2 id=\"text\">\n              <span\n                style={{\n                  display: \"inline-block\",\n                }}\n              >\n                <Typewriter\n  options={{\n    strings: ['Hello~', 'Share Your Happiest Moment!'],\n    autoStart: true,\n    loop: true,\n  }}\n/>\n               \n              </span>\n            </h2>\n    </div>\n  )\n}\n\nexport default Title;","import firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBWEyocjrQCjoENYbkKIbVe_2D9bXPe8XA\",\n  authDomain: \"sahm-5a4a0.firebaseapp.com\",\n  projectId: \"sahm-5a4a0\",\n  storageBucket: \"sahm-5a4a0.appspot.com\",\n  messagingSenderId: \"1010829019707\",\n  appId: \"1:1010829019707:web:fb166e26f7f3ac66972a1e\",\n  measurementId: \"G-X27Q0GCH8X\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport {projectStorage, projectFirestore, timestamp};\n\n","import { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    // references\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection('images');\n    \n    storageRef.put(file).on('state_changed', (snap) => {\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n      setProgress(percentage);\n    }, (err) => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      const createdAt = timestamp();\n      await collectionRef.add({ url, createdAt });\n      setUrl(url);\n    });\n  }, [file]);\n\n  return { progress, url, error };\n}\n\nexport default useStorage;","import React, { useEffect } from 'react';\nimport useStorage from '../hooks/useStorage';\nimport { motion } from 'framer-motion';\n\nconst ProgressBar = ({ file, setFile }) => {\n  const { progress, url } = useStorage(file);\n\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n\n  return (\n    <motion.div className=\"progress-bar\"\n      initial={{ width: 0 }}\n      animate={{ width: progress + '%' }}\n    ></motion.div>\n  );\n} \n\nexport default ProgressBar;","import React, { useState } from 'react';\nimport ProgressBar from './ProgessBar';\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const types = ['image/png', 'image/jpeg'];\n\n  const handleChange = (e) => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError('');\n    } else {\n      setFile(null);\n      setError('Please select an image file (png or jpg)');\n    }\n  };\n\n  return (\n    <form>\n      <label>\n        <input type=\"file\" onChange={handleChange} />\n        <span>+</span>\n      </label>\n      <div className=\"output\">\n        { error && <div className=\"error\">{ error }</div>}\n        { file && <div>{ file.name }</div> }\n        { file && <ProgressBar file={file} setFile={setFile} /> }\n      </div>\n    </form>\n  );\n}\n\nexport default UploadForm;","import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    const unsub = projectFirestore.collection(collection)\n      .orderBy('createdAt', 'desc')\n      .onSnapshot(snap => {\n        let documents = [];\n        snap.forEach(doc => {\n          documents.push({...doc.data(), id: doc.id});\n        });\n        setDocs(documents);\n      });\n\n    return () => unsub();\n    // this is a cleanup function that react will run when\n    // a component using the hook unmounts\n  }, [collection]);\n\n  return { docs };\n}\n\nexport default useFirestore;","import React from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { motion } from 'framer-motion';\n\nconst ImageGrid = ({ setSelectedImg }) => {\n  const { docs } = useFirestore('images');\n\n  return (\n    <div className=\"img-grid\">\n      {docs && docs.map(doc => (\n        <motion.div className=\"img-wrap\" key={doc.id} \n          layout\n          whileHover={{ opacity: 1 }}s\n          onClick={() => setSelectedImg(doc.url)}\n        >\n          <motion.img src={doc.url} alt=\"\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 1 }}\n          />\n        </motion.div>\n      ))}\n    </div>\n  )\n}\n\nexport default ImageGrid;","import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Modal = ({ setSelectedImg, selectedImg }) => {\n\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) {\n      setSelectedImg(null);\n    }\n  }\n\n  return (\n    <motion.div className=\"backdrop\" onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.img src={selectedImg} alt=\"\" \n        initial={{ y: \"-100vh\" }}\n        animate={{ y: 0 }}\n      />\n    </motion.div>\n  )\n}\n\nexport default Modal;","import React, { useState } from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\n\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n    <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      { selectedImg && (\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n      )}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}